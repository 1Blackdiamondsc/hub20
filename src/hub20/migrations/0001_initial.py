# Generated by Django 2.2.7 on 2019-11-26 22:29

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import gnosis.eth.django.models
import hub20.models.ethereum
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EthereumToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chain', models.PositiveIntegerField(choices=[(1, 'Mainnet'), (3, 'Ropsten'), (4, 'Rinkeby'), (5, 'GÃ¶rli'), (42, 'Kovan')], default=1)),
                ('ticker', models.CharField(max_length=5)),
                ('name', models.CharField(max_length=60)),
                ('decimals', models.PositiveIntegerField(default=18)),
                ('address', gnosis.eth.django.models.EthereumAddressField(null=True)),
            ],
            options={
                'unique_together': {('chain', 'address')},
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[('requested', 'requested'), ('ongoing', 'ongoing'), ('completed', 'completed'), ('canceled', 'canceled'), ('expired', 'expired')], default='requested', max_length=100, no_check_for_status=True, verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
                ('amount', hub20.models.ethereum.EthereumTokenAmountField(decimal_places=18, max_digits=32)),
                ('identifier', models.CharField(db_index=True, max_length=48, unique=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hub20.EthereumToken')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('closed', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Raiden',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('address', gnosis.eth.django.models.EthereumAddressField()),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', gnosis.eth.django.models.EthereumAddressField(db_index=True, unique=True)),
                ('private_key', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('amount', hub20.models.ethereum.EthereumTokenAmountField(decimal_places=18, max_digits=32)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TokenNetwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', gnosis.eth.django.models.EthereumAddressField()),
                ('token', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hub20.EthereumToken')),
            ],
        ),
        migrations.CreateModel(
            name='RaidenPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('amount', hub20.models.ethereum.EthereumTokenAmountField(decimal_places=18, max_digits=32)),
                ('identifier', models.PositiveIntegerField()),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hub20.EthereumToken')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hub20.Invoice')),
                ('raiden', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hub20.Raiden')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='raiden',
            name='token_networks',
            field=models.ManyToManyField(to='hub20.TokenNetwork'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='raiden',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='hub20.Raiden'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='wallet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hub20.Wallet'),
        ),
        migrations.CreateModel(
            name='InternalPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('amount', hub20.models.ethereum.EthereumTokenAmountField(decimal_places=18, max_digits=32)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hub20.EthereumToken')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hub20.Invoice')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlockchainPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('amount', hub20.models.ethereum.EthereumTokenAmountField(decimal_places=18, max_digits=32)),
                ('address', gnosis.eth.django.models.EthereumAddressField(db_index=True)),
                ('tx_hash', gnosis.eth.django.models.Sha3HashField()),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hub20.EthereumToken')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hub20.Invoice')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
